/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';

import {
  EventEmitter,
} from '@stencil/core';

declare global {

  namespace StencilComponents {
    interface AppFirebase {

    }
  }

  interface HTMLAppFirebaseElement extends StencilComponents.AppFirebase, HTMLStencilElement {}

  var HTMLAppFirebaseElement: {
    prototype: HTMLAppFirebaseElement;
    new (): HTMLAppFirebaseElement;
  };
  interface HTMLElementTagNameMap {
    'app-firebase': HTMLAppFirebaseElement;
  }
  interface ElementTagNameMap {
    'app-firebase': HTMLAppFirebaseElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-firebase': JSXElements.AppFirebaseAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFirebaseAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface E2eAttributeBasic {
      'customAttr': string;
      'multiWord': string;
      'single': string;
    }
  }

  interface HTMLE2eAttributeBasicElement extends StencilComponents.E2eAttributeBasic, HTMLStencilElement {}

  var HTMLE2eAttributeBasicElement: {
    prototype: HTMLE2eAttributeBasicElement;
    new (): HTMLE2eAttributeBasicElement;
  };
  interface HTMLElementTagNameMap {
    'e2e-attribute-basic': HTMLE2eAttributeBasicElement;
  }
  interface ElementTagNameMap {
    'e2e-attribute-basic': HTMLE2eAttributeBasicElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'e2e-attribute-basic': JSXElements.E2eAttributeBasicAttributes;
    }
  }
  namespace JSXElements {
    export interface E2eAttributeBasicAttributes extends HTMLAttributes {
      'customAttr'?: string;
      'multiWord'?: string;
      'single'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface LazyImg {
      'alt': string;
      'src': string;
      'width': number;
    }
  }

  interface HTMLLazyImgElement extends StencilComponents.LazyImg, HTMLStencilElement {}

  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lazy-img': JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
      'src'?: string;
      'width'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface TjaexaModalForm {

    }
  }

  interface HTMLTjaexaModalFormElement extends StencilComponents.TjaexaModalForm, HTMLStencilElement {}

  var HTMLTjaexaModalFormElement: {
    prototype: HTMLTjaexaModalFormElement;
    new (): HTMLTjaexaModalFormElement;
  };
  interface HTMLElementTagNameMap {
    'tjaexa-modal-form': HTMLTjaexaModalFormElement;
  }
  interface ElementTagNameMap {
    'tjaexa-modal-form': HTMLTjaexaModalFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'tjaexa-modal-form': JSXElements.TjaexaModalFormAttributes;
    }
  }
  namespace JSXElements {
    export interface TjaexaModalFormAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface TjaexaShowModal {

    }
  }

  interface HTMLTjaexaShowModalElement extends StencilComponents.TjaexaShowModal, HTMLStencilElement {}

  var HTMLTjaexaShowModalElement: {
    prototype: HTMLTjaexaShowModalElement;
    new (): HTMLTjaexaShowModalElement;
  };
  interface HTMLElementTagNameMap {
    'tjaexa-show-modal': HTMLTjaexaShowModalElement;
  }
  interface ElementTagNameMap {
    'tjaexa-show-modal': HTMLTjaexaShowModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'tjaexa-show-modal': JSXElements.TjaexaShowModalAttributes;
    }
  }
  namespace JSXElements {
    export interface TjaexaShowModalAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
